{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SortTypes","SortHandlers","ALPHABET","a","b","localeCompare","LENGTH","length","App","useState","sortType","setSortType","isReversed","setIsReversed","listOfGoods","nextListOfGoods","sortHandler","sort","reverse","getPreparedGoods","isResetDisplayed","toString","className","type","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACM,WADNA,EAEI,SAGJC,EAAe,CACnBC,SAAU,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,IACpCE,OAAQ,SAACH,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,SAkBpBC,EAAM,WACjB,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAlBiB,SAACA,EAAaJ,EAAUE,GAC/C,IAAMG,EAAe,YAAOD,GACtBE,EAAcf,EAAaS,GAUjC,OARIM,GACFD,EAAgBE,KAAKD,GAGnBJ,GACFG,EAAgBG,UAGXH,EAMaI,CAAiBpB,EAAiBW,EAAUE,GAE1DQ,EAAmBN,EAAYO,aAAetB,EAAgBsB,YAClD,OAAbX,GACAE,EAmBL,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBZ,IAAaV,EAAqB,GAAK,YACpEwB,QAvByB,WAC/Bb,EAAYX,IAmBR,iCAOA,wBACEuB,KAAK,SACLD,UAAS,4BAAuBZ,IAAaV,EAAmB,GAAK,YACrEwB,QA1BmB,WACzBb,EAAYX,IAsBR,4BAOA,wBACEuB,KAAK,SACLD,UAAS,4BAAuBV,EAAa,GAAK,YAClDY,QA7Bc,WACpBX,GAAc,SAAAY,GAAI,OAAKA,MAyBnB,qBAOCL,GACC,wBACEG,KAAK,SACLD,UAAU,4BACVE,QAjCU,WAClBb,EAAY,MACZE,GAAc,IA4BR,sBAUJ,6BACGC,EAAYY,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCtGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6eed6f31.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SortTypes = {\n  ALPHABET: 'ALPHABET',\n  LENGTH: 'LENGTH',\n};\n\nconst SortHandlers = {\n  ALPHABET: (a, b) => a.localeCompare(b),\n  LENGTH: (a, b) => a.length - b.length,\n};\n\nconst getPreparedGoods = (listOfGoods, sortType, isReversed) => {\n  const nextListOfGoods = [...listOfGoods];\n  const sortHandler = SortHandlers[sortType];\n\n  if (sortHandler) {\n    nextListOfGoods.sort(sortHandler);\n  }\n\n  if (isReversed) {\n    nextListOfGoods.reverse();\n  }\n\n  return nextListOfGoods;\n};\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(null);\n  const [isReversed, setIsReversed] = useState(false);\n  const listOfGoods = getPreparedGoods(goodsFromServer, sortType, isReversed);\n\n  const isResetDisplayed = listOfGoods.toString() !== goodsFromServer.toString()\n    || sortType !== null\n    || isReversed;\n\n  const handleSortAlphabetically = () => {\n    setSortType(SortTypes.ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortTypes.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  const handleReset = () => {\n    setSortType(null);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortTypes.ALPHABET ? '' : 'is-light'}`}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SortTypes.LENGTH ? '' : 'is-light'}`}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n        {isResetDisplayed && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {listOfGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}